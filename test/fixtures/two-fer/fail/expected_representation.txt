{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "IDENTIFIER_0"
            },
            "init": {
              "type": "ArrowFunctionExpression",
              "generator": false,
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "IDENTIFIER_1"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "IDENTIFIER_2"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "IDENTIFIER_3"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "IDENTIFIER_1"
                        }
                      ],
                      "optional": false
                    }
                  },
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "TemplateLiteral",
                      "quasis": [
                        {
                          "type": "TemplateElement",
                          "value": {
                            "raw": "One for you, one for me.",
                            "cooked": "One for you, one for me."
                          },
                          "tail": true
                        }
                      ],
                      "expressions": []
                    }
                  }
                ]
              },
              "async": false,
              "expression": false
            }
          }
        ],
        "kind": "const"
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "IDENTIFIER_2"
          },
          "property": {
            "type": "Identifier",
            "name": "IDENTIFIER_3"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "Hello there debug message",
            "raw": "\"Hello there debug message\""
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "IDENTIFIER_2"
          },
          "property": {
            "type": "Identifier",
            "name": "IDENTIFIER_4"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "Ok there log message",
            "raw": "\"Ok there log message\""
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "module"
}